{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041a33422 \u0410\u0440\u043d\u0430\u0443\u0442\u043e\u0432\u0430 \u0415\u043b\u0438\u0437\u0430\u0432\u0435\u0442\u0430","title":"\u041a33422 \u0410\u0440\u043d\u0430\u0443\u0442\u043e\u0432\u0430 \u0415\u043b\u0438\u0437\u0430\u0432\u0435\u0442\u0430"},{"location":"#33422","text":"","title":"\u041a33422 \u0410\u0440\u043d\u0430\u0443\u0442\u043e\u0432\u0430 \u0415\u043b\u0438\u0437\u0430\u0432\u0435\u0442\u0430"},{"location":"lab2/forms/","text":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u043e\u0440\u043c \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438, \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 class RegisterForm(UserCreationForm): class Meta: model = User fields = ['username', 'first_name', 'last_name', 'email', 'password1', 'password2'] \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 def register(request): if request.method == 'POST': form = RegisterForm(request.POST) if form.is_valid(): form.save() return redirect('/airport') else: form = RegisterForm() return render(request, 'registration/register.html', {'form': form}) HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0444\u043e\u0440\u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 {% extends 'base.html' %} {% block title %}Register{% endblock %} {% load crispy_forms_tags %} {% block content %} <div class=\"content-section\"> <form method=\"POST\" class=\"form-group\"> {% csrf_token %} <legend class=\"border-bottom mb-3\">Create an Account</legend> {{form|crispy}} <button name=\"create\" type=\"submit\" class=\"btn btn-success\">Register</button> </form> </div> {% endblock %} \u0424\u043e\u0440\u043c\u0430 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u0430 class ReservationForm(forms.ModelForm): class Meta: model = Reservation fields = ['seat_number'] \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f def make_reservation(request, flight_id, reservation_id=None): if request.user.is_authenticated: if request.method == 'POST': flight = get_object_or_404(Flight, pk=flight_id) if reservation_id is None: form = ReservationForm(request.POST) if form.is_valid(): new_res = form.save(commit=False) new_res.flight = flight new_res.passenger = request.user new_res.save() return redirect('/airport/list_reservations') else: reservation = get_object_or_404(Reservation, pk=reservation_id) form = ReservationForm(request.POST, instance=reservation) form.save() return redirect('/airport/list_reservations') else: form = ReservationForm() return render(request, 'make_reservation.html', {'form': form, 'flight_id': flight_id, 'reservation_id': reservation_id}) else: return HttpResponse('Please sign in to manage your reservations.') HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0444\u043e\u0440\u043c\u044b \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f {% block title %}Enter your seat number{% endblock %} {% block content %} <div class=\"content-section\"> {% if reservation_id %} <form method=\"POST\" action=\"/airport/make_reservation/{{ flight_id }}/{{ reservation_id }}/\"> {% csrf_token %} {{ form }} <button name=\"create\" type=\"submit\">Make reservation</button> </form> {% else %} <form method=\"POST\" action=\"/airport/make_reservation/{{ flight_id }}/\"> {% csrf_token %} {{ form }} <button name=\"create\" type=\"submit\">Make reservation</button> </form> {% endif %} </div> {% endblock %} <form action=\"http://127.0.0.1:8000/airport\"> <input type=\"submit\" value=\"Return to the main page\" /> </form> \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u0421 \u0434\u043e\u0431\u0430\u0430\u043b\u0435\u043d\u0438\u0435\u043c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u043b\u043e\u0433\u0438\u043a\u0430 \u0442\u0430\u043a\u0430\u044f \u0436\u0435, \u043a\u0430\u043a \u0438 \u0441 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c, id \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0440\u0435\u0439\u0441\u0430 \u043c\u044b \u0443\u0436\u0435 \u0438\u043c\u0435\u0435\u043c, \u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0438 \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f class ReviewForm(forms.ModelForm): class Meta: model = Review fields = ['comment', 'rating'] \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 def make_review(request, flight_id): if request.user.is_authenticated: if request.method == 'POST': flight = get_object_or_404(Flight, pk=flight_id) form = ReviewForm(request.POST) if form.is_valid(): new_res = form.save(commit=False) new_res.flight = flight new_res.passenger = request.user new_res.save() return redirect('/airport/list_reservations') else: form = ReviewForm() return render(request, 'make_review.html', {'form': form, 'flight_id': flight_id}) else: return HttpResponse('Please sign in to manage your reservations.') HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0444\u043e\u0440\u043c\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 {% block title %}Please tell us about your experience!{% endblock %} {% block content %} <div class=\"content-section\"> <form method=\"POST\" action=\"/airport/make_review/{{ flight_id }}/\"> {% csrf_token %} {{ form }} <br><br> <button name=\"create\" type=\"submit\">Send review</button> </form> </div> {% endblock %} <form action=\"http://127.0.0.1:8000/airport\"> <input type=\"submit\" value=\"Return to the main page\" /> </form>","title":"forms"},{"location":"lab2/forms/#_1","text":"\u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 class RegisterForm(UserCreationForm): class Meta: model = User fields = ['username', 'first_name', 'last_name', 'email', 'password1', 'password2'] \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 def register(request): if request.method == 'POST': form = RegisterForm(request.POST) if form.is_valid(): form.save() return redirect('/airport') else: form = RegisterForm() return render(request, 'registration/register.html', {'form': form}) HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0444\u043e\u0440\u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 {% extends 'base.html' %} {% block title %}Register{% endblock %} {% load crispy_forms_tags %} {% block content %} <div class=\"content-section\"> <form method=\"POST\" class=\"form-group\"> {% csrf_token %} <legend class=\"border-bottom mb-3\">Create an Account</legend> {{form|crispy}} <button name=\"create\" type=\"submit\" class=\"btn btn-success\">Register</button> </form> </div> {% endblock %} \u0424\u043e\u0440\u043c\u0430 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u0430 class ReservationForm(forms.ModelForm): class Meta: model = Reservation fields = ['seat_number'] \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f def make_reservation(request, flight_id, reservation_id=None): if request.user.is_authenticated: if request.method == 'POST': flight = get_object_or_404(Flight, pk=flight_id) if reservation_id is None: form = ReservationForm(request.POST) if form.is_valid(): new_res = form.save(commit=False) new_res.flight = flight new_res.passenger = request.user new_res.save() return redirect('/airport/list_reservations') else: reservation = get_object_or_404(Reservation, pk=reservation_id) form = ReservationForm(request.POST, instance=reservation) form.save() return redirect('/airport/list_reservations') else: form = ReservationForm() return render(request, 'make_reservation.html', {'form': form, 'flight_id': flight_id, 'reservation_id': reservation_id}) else: return HttpResponse('Please sign in to manage your reservations.') HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0444\u043e\u0440\u043c\u044b \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f {% block title %}Enter your seat number{% endblock %} {% block content %} <div class=\"content-section\"> {% if reservation_id %} <form method=\"POST\" action=\"/airport/make_reservation/{{ flight_id }}/{{ reservation_id }}/\"> {% csrf_token %} {{ form }} <button name=\"create\" type=\"submit\">Make reservation</button> </form> {% else %} <form method=\"POST\" action=\"/airport/make_reservation/{{ flight_id }}/\"> {% csrf_token %} {{ form }} <button name=\"create\" type=\"submit\">Make reservation</button> </form> {% endif %} </div> {% endblock %} <form action=\"http://127.0.0.1:8000/airport\"> <input type=\"submit\" value=\"Return to the main page\" /> </form> \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u0421 \u0434\u043e\u0431\u0430\u0430\u043b\u0435\u043d\u0438\u0435\u043c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u043b\u043e\u0433\u0438\u043a\u0430 \u0442\u0430\u043a\u0430\u044f \u0436\u0435, \u043a\u0430\u043a \u0438 \u0441 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c, id \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0440\u0435\u0439\u0441\u0430 \u043c\u044b \u0443\u0436\u0435 \u0438\u043c\u0435\u0435\u043c, \u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0438 \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f class ReviewForm(forms.ModelForm): class Meta: model = Review fields = ['comment', 'rating'] \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 def make_review(request, flight_id): if request.user.is_authenticated: if request.method == 'POST': flight = get_object_or_404(Flight, pk=flight_id) form = ReviewForm(request.POST) if form.is_valid(): new_res = form.save(commit=False) new_res.flight = flight new_res.passenger = request.user new_res.save() return redirect('/airport/list_reservations') else: form = ReviewForm() return render(request, 'make_review.html', {'form': form, 'flight_id': flight_id}) else: return HttpResponse('Please sign in to manage your reservations.') HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0444\u043e\u0440\u043c\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 {% block title %}Please tell us about your experience!{% endblock %} {% block content %} <div class=\"content-section\"> <form method=\"POST\" action=\"/airport/make_review/{{ flight_id }}/\"> {% csrf_token %} {{ form }} <br><br> <button name=\"create\" type=\"submit\">Send review</button> </form> </div> {% endblock %} <form action=\"http://127.0.0.1:8000/airport\"> <input type=\"submit\" value=\"Return to the main page\" /> </form>","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u043e\u0440\u043c \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438, \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432"},{"location":"lab2/itog/","text":"\u0412\u044b\u0432\u043e\u0434\u044b \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u043e \u0438\u0437\u0443\u0447\u0435\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 django: - \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, - \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0443\u0442\u0435\u0439, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0438 html-\u0444\u0430\u0439\u043b\u043e\u0432. \u0411\u044b\u043b\u043e \u0438\u0437\u0443\u0447\u0435\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 \u043f\u043e \u0441\u0430\u0439\u0442\u0443 \u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0444\u043e\u0440\u043c \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.","title":"\u0412\u044b\u0432\u043e\u0434\u044b"},{"location":"lab2/itog/#_1","text":"\u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u043e \u0438\u0437\u0443\u0447\u0435\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 django: - \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, - \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0443\u0442\u0435\u0439, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0438 html-\u0444\u0430\u0439\u043b\u043e\u0432. \u0411\u044b\u043b\u043e \u0438\u0437\u0443\u0447\u0435\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 \u043f\u043e \u0441\u0430\u0439\u0442\u0443 \u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0444\u043e\u0440\u043c \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.","title":"\u0412\u044b\u0432\u043e\u0434\u044b"},{"location":"lab2/models/","text":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0422\u0430\u0431\u043b\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u043b\u0435\u0442\u0430\u0445. \u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u043e\u043c\u0435\u0440\u0435 \u0440\u0435\u0439\u0441\u0430, \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438, \u043e\u0442\u043b\u0435\u0442\u0435, \u043f\u0440\u0438\u043b\u0435\u0442\u0435, \u0442\u0438\u043f\u0435 (\u043f\u0440\u0438\u043b\u0435\u0442, \u043e\u0442\u043b\u0435\u0442), \u043d\u043e\u043c\u0435\u0440\u0435 \u0433\u0435\u0439\u0442\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: 1) \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. 2) \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u0442 \u043d\u0430 \u0440\u0435\u0439\u0441\u0430\u0445. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. 3) \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0440\u0435\u0439\u0441 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0430 \u0438 \u0432\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043d\u043e\u043c\u0435\u0440 \u0435\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. 4) \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0440\u0435\u0439\u0441\u0430. 5) \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0440\u0435\u0439\u0441\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u0430 \u0440\u0435\u0439\u0441\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. Flight - \u0440\u0435\u0439\u0441\u044b \u0421 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u043c\u0438 \u0432\u044b\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u043c\u0438 \u0441\u043f\u0438\u0441\u043a\u0430\u043c\u0438 \u0434\u043b\u044f \u0442\u0435\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432, \u043a\u043e\u0433\u0434\u0430 \u044d\u0442\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e class Flight(models.Model): class Meta: db_table = 'flight' class FlightType(models.TextChoices): ARRIVAL = 'ARR', 'Arrival' DEPARTURE = 'DEP', 'Departure' class City(models.TextChoices): AMSTERDAM = 'AMS', 'Amsterdam' BERLIN = 'BER', 'Berlin' COPENHAGEN = 'CPH', 'Copenhagen' DUBLIN = 'DUB', 'Dublin' HELSINKI = 'HEL', 'Helsinki' MOSCOW = 'SVO', 'Moscow (Sheremetyevo)' LONDON = 'LHR', 'London (Heathrow)' SAINT_PETERSBURG = 'LED', 'Saint-Petersburg (Pulkovo)' class Airline(models.TextChoices): AEROFLOT = 'AEROFLOT', 'Aeroflot' BRIT_AIR = 'BRIT_AIR', 'British Airlines' LUFTHANSA = 'LUFTHANSA', 'Lufthansa' TURK_AIR = 'TURK_AIR', 'Turkish Airlines' AIR_FRANCE = 'AIR_FRANCE', 'Air France' flight_number = models.CharField(max_length=16, unique=True) airline_name = models.CharField(max_length=32, choices=Airline.choices) departure = models.DateTimeField() arrival = models.DateTimeField() origin = models.CharField(max_length=3, choices=City.choices) destination = models.CharField(max_length=3, choices=City.choices) type = models.CharField(max_length=9, choices=FlightType.choices) gate_number = models.CharField(max_length=8) passengers = models.ManyToManyField(User, through='Reservation') Reservatin - \u0421\u0432\u044f\u0437\u044c \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440-\u0440\u0435\u0439\u0441 \u0425\u0440\u0430\u043d\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 (\u0438\u043c\u044f, \u043d\u043e\u043c\u0435\u0440 \u043c\u0435\u0441\u0442\u0430), \u0440\u0435\u0439\u0441\u0435 (\u043d\u043e\u043c\u0435\u0440 \u0440\u0435\u0439\u0441\u0430), \u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u0435 (\u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d/\u043d\u0435\u0442, \u043d\u043e\u043c\u0435\u0440 \u0431\u0438\u043b\u0435\u0442\u0430) class Reservation(models.Model): class Meta: db_table = 'reservation' unique_together = [['flight', 'seat_number']] flight = models.ForeignKey(Flight, on_delete=models.CASCADE) passenger = models.ForeignKey(User, on_delete=models.CASCADE) seat_number = models.CharField(max_length=4, null=True, blank=True) ticket_number = models.CharField(max_length=16, unique=True, null=True, blank=True) checked_in = models.BooleanField(default=False) Review - \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043a \u0440\u0435\u0439\u0441\u0430\u043c \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0440\u0435\u0439\u0441\u0430 \u0438 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0440\u0435\u0439\u0442\u0438\u043d\u0433 class Review(models.Model): class Meta: db_table = 'review' flight = models.ForeignKey(Flight, on_delete=models.CASCADE) passenger = models.ForeignKey(User, on_delete=models.CASCADE) comment = models.TextField() rating = models.IntegerField( default=10, validators=[ MaxValueValidator(10), MinValueValidator(1) ] )","title":"models"},{"location":"lab2/models/#_1","text":"\u0422\u0430\u0431\u043b\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u043b\u0435\u0442\u0430\u0445. \u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u043e\u043c\u0435\u0440\u0435 \u0440\u0435\u0439\u0441\u0430, \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438, \u043e\u0442\u043b\u0435\u0442\u0435, \u043f\u0440\u0438\u043b\u0435\u0442\u0435, \u0442\u0438\u043f\u0435 (\u043f\u0440\u0438\u043b\u0435\u0442, \u043e\u0442\u043b\u0435\u0442), \u043d\u043e\u043c\u0435\u0440\u0435 \u0433\u0435\u0439\u0442\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: 1) \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. 2) \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u0442 \u043d\u0430 \u0440\u0435\u0439\u0441\u0430\u0445. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. 3) \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0440\u0435\u0439\u0441 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0430 \u0438 \u0432\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043d\u043e\u043c\u0435\u0440 \u0435\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. 4) \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0440\u0435\u0439\u0441\u0430. 5) \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0440\u0435\u0439\u0441\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u0430 \u0440\u0435\u0439\u0441\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. Flight - \u0440\u0435\u0439\u0441\u044b \u0421 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u043c\u0438 \u0432\u044b\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u043c\u0438 \u0441\u043f\u0438\u0441\u043a\u0430\u043c\u0438 \u0434\u043b\u044f \u0442\u0435\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432, \u043a\u043e\u0433\u0434\u0430 \u044d\u0442\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e class Flight(models.Model): class Meta: db_table = 'flight' class FlightType(models.TextChoices): ARRIVAL = 'ARR', 'Arrival' DEPARTURE = 'DEP', 'Departure' class City(models.TextChoices): AMSTERDAM = 'AMS', 'Amsterdam' BERLIN = 'BER', 'Berlin' COPENHAGEN = 'CPH', 'Copenhagen' DUBLIN = 'DUB', 'Dublin' HELSINKI = 'HEL', 'Helsinki' MOSCOW = 'SVO', 'Moscow (Sheremetyevo)' LONDON = 'LHR', 'London (Heathrow)' SAINT_PETERSBURG = 'LED', 'Saint-Petersburg (Pulkovo)' class Airline(models.TextChoices): AEROFLOT = 'AEROFLOT', 'Aeroflot' BRIT_AIR = 'BRIT_AIR', 'British Airlines' LUFTHANSA = 'LUFTHANSA', 'Lufthansa' TURK_AIR = 'TURK_AIR', 'Turkish Airlines' AIR_FRANCE = 'AIR_FRANCE', 'Air France' flight_number = models.CharField(max_length=16, unique=True) airline_name = models.CharField(max_length=32, choices=Airline.choices) departure = models.DateTimeField() arrival = models.DateTimeField() origin = models.CharField(max_length=3, choices=City.choices) destination = models.CharField(max_length=3, choices=City.choices) type = models.CharField(max_length=9, choices=FlightType.choices) gate_number = models.CharField(max_length=8) passengers = models.ManyToManyField(User, through='Reservation') Reservatin - \u0421\u0432\u044f\u0437\u044c \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440-\u0440\u0435\u0439\u0441 \u0425\u0440\u0430\u043d\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 (\u0438\u043c\u044f, \u043d\u043e\u043c\u0435\u0440 \u043c\u0435\u0441\u0442\u0430), \u0440\u0435\u0439\u0441\u0435 (\u043d\u043e\u043c\u0435\u0440 \u0440\u0435\u0439\u0441\u0430), \u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u0435 (\u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d/\u043d\u0435\u0442, \u043d\u043e\u043c\u0435\u0440 \u0431\u0438\u043b\u0435\u0442\u0430) class Reservation(models.Model): class Meta: db_table = 'reservation' unique_together = [['flight', 'seat_number']] flight = models.ForeignKey(Flight, on_delete=models.CASCADE) passenger = models.ForeignKey(User, on_delete=models.CASCADE) seat_number = models.CharField(max_length=4, null=True, blank=True) ticket_number = models.CharField(max_length=16, unique=True, null=True, blank=True) checked_in = models.BooleanField(default=False) Review - \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043a \u0440\u0435\u0439\u0441\u0430\u043c \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0440\u0435\u0439\u0441\u0430 \u0438 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0440\u0435\u0439\u0442\u0438\u043d\u0433 class Review(models.Model): class Meta: db_table = 'review' flight = models.ForeignKey(Flight, on_delete=models.CASCADE) passenger = models.ForeignKey(User, on_delete=models.CASCADE) comment = models.TextField() rating = models.IntegerField( default=10, validators=[ MaxValueValidator(10), MinValueValidator(1) ] )","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"lab2/urls/","text":"\u041f\u0443\u0442\u0438 from django.urls import path from . import views urlpatterns = [ path('', views.index, name='index'), path('<int:flight_id>/', views.flight_info, name='flight_info'), path('list_reservations/', views.list_reservations, name='list_reservations'), path('make_reservation/<int:flight_id>/', views.make_reservation, name='create_reservation'), path('make_reservation/<int:flight_id>/<int:reservation_id>/', views.make_reservation, name='edit_reservation'), path('delete_reservation/<int:reservation_id>/', views.delete_reservation, name='delete_reservation'), path('make_review/<int:flight_id>/', views.make_review, name='make_review') ]","title":"urls"},{"location":"lab2/urls/#_1","text":"from django.urls import path from . import views urlpatterns = [ path('', views.index, name='index'), path('<int:flight_id>/', views.flight_info, name='flight_info'), path('list_reservations/', views.list_reservations, name='list_reservations'), path('make_reservation/<int:flight_id>/', views.make_reservation, name='create_reservation'), path('make_reservation/<int:flight_id>/<int:reservation_id>/', views.make_reservation, name='edit_reservation'), path('delete_reservation/<int:reservation_id>/', views.delete_reservation, name='delete_reservation'), path('make_review/<int:flight_id>/', views.make_review, name='make_review') ]","title":"\u041f\u0443\u0442\u0438"},{"location":"lab2/views/","text":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0414\u043e\u043c\u0430\u0448\u043d\u044f\u044f \u0441\u0442\u0440a\u043d\u0438\u0446\u0430 \u0441 \u0440\u0435\u0439\u0441\u0430\u043c\u0438 \u0412\u0441\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u043e\u044f\u0449\u0438\u0435 \u0440\u0435\u0439\u0441\u044b, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0441\u0442\u043e def index(request): flight_list: QuerySet[Flight] = Flight.objects.order_by(\"id\")[:10] return render(request, 'index.html', {'flight_list': flight_list}) HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0440\u0435\u0439\u0441\u043e\u0432 {% if flight_list %} <p>ARRIVALS</p> <ul> {% for flight in flight_list %} {% if flight.type == 'ARR' %} <li><a href=\"/airport/{{ flight.id }}/\">{{ flight.flight_number }}</a></li> {% endif %} {% endfor %} </ul> <p>DEPARTURES</p> <ul> {% for flight in flight_list %} {% if flight.type == 'DEP' %} <li><a href=\"/airport/{{ flight.id }}/\">{{ flight.flight_number }}</a></li> {% endif %} {% endfor %} </ul> {% else %} <p>No flights are currently arriving or departing.</p> {% endif %} {% if request.user.is_authenticated %} <a href=\"http://127.0.0.1:8000/airport/list_reservations/\">My reservations<br></a> <a>Current user: {{ request.user.username }}</a> {% endif %} <br><br> {% if request.user.is_authenticated %} <a href=\"http://127.0.0.1:8000/login/\">Change user?<br></a> {% endif %} \u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u043d\u0430 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 def home_redirect(request): return redirect('/airport') \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0440\u0435\u0439\u0441\u0435 def flight_info(request, flight_id): flight: Flight = get_object_or_404(Flight, pk=flight_id) dtos = [] for passenger in flight.passengers.all(): dtos.append(PassengerDTO( passenger.first_name + ' ' + passenger.last_name, Reservation.objects.filter(passenger=passenger.id).get().seat_number, Reservation.objects.filter(passenger=passenger.id).get().checked_in )) return render(request, 'flight_info.html', { 'dtos': dtos, 'flight_number': flight.flight_number, 'flight_id': flight.id }) \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0430\u0448\u0438\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u0445 def list_reservations(request): if request.user.is_authenticated: reservations = Reservation.objects.filter(passenger=request.user.id) return render(request, 'reservation_list.html', context={'reservations': reservations}) else: return HttpResponse('Please sign in to view your reservations.') \u0410 \u0442\u0430\u043a\u0436\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u044d\u0442\u0438\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 def delete_reservation(request, reservation_id): if request.user.is_authenticated: get_object_or_404(Reservation, pk=reservation_id).delete() return redirect('/airport/list_reservations') else: return HttpResponse('Please sign in to manage your reservations.')","title":"views"},{"location":"lab2/views/#_1","text":"\u0414\u043e\u043c\u0430\u0448\u043d\u044f\u044f \u0441\u0442\u0440a\u043d\u0438\u0446\u0430 \u0441 \u0440\u0435\u0439\u0441\u0430\u043c\u0438 \u0412\u0441\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u043e\u044f\u0449\u0438\u0435 \u0440\u0435\u0439\u0441\u044b, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0441\u0442\u043e def index(request): flight_list: QuerySet[Flight] = Flight.objects.order_by(\"id\")[:10] return render(request, 'index.html', {'flight_list': flight_list}) HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0440\u0435\u0439\u0441\u043e\u0432 {% if flight_list %} <p>ARRIVALS</p> <ul> {% for flight in flight_list %} {% if flight.type == 'ARR' %} <li><a href=\"/airport/{{ flight.id }}/\">{{ flight.flight_number }}</a></li> {% endif %} {% endfor %} </ul> <p>DEPARTURES</p> <ul> {% for flight in flight_list %} {% if flight.type == 'DEP' %} <li><a href=\"/airport/{{ flight.id }}/\">{{ flight.flight_number }}</a></li> {% endif %} {% endfor %} </ul> {% else %} <p>No flights are currently arriving or departing.</p> {% endif %} {% if request.user.is_authenticated %} <a href=\"http://127.0.0.1:8000/airport/list_reservations/\">My reservations<br></a> <a>Current user: {{ request.user.username }}</a> {% endif %} <br><br> {% if request.user.is_authenticated %} <a href=\"http://127.0.0.1:8000/login/\">Change user?<br></a> {% endif %} \u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u043d\u0430 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 def home_redirect(request): return redirect('/airport') \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0440\u0435\u0439\u0441\u0435 def flight_info(request, flight_id): flight: Flight = get_object_or_404(Flight, pk=flight_id) dtos = [] for passenger in flight.passengers.all(): dtos.append(PassengerDTO( passenger.first_name + ' ' + passenger.last_name, Reservation.objects.filter(passenger=passenger.id).get().seat_number, Reservation.objects.filter(passenger=passenger.id).get().checked_in )) return render(request, 'flight_info.html', { 'dtos': dtos, 'flight_number': flight.flight_number, 'flight_id': flight.id }) \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0430\u0448\u0438\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u0445 def list_reservations(request): if request.user.is_authenticated: reservations = Reservation.objects.filter(passenger=request.user.id) return render(request, 'reservation_list.html', context={'reservations': reservations}) else: return HttpResponse('Please sign in to view your reservations.') \u0410 \u0442\u0430\u043a\u0436\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u044d\u0442\u0438\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 def delete_reservation(request, reservation_id): if request.user.is_authenticated: get_object_or_404(Reservation, pk=reservation_id).delete() return redirect('/airport/list_reservations') else: return HttpResponse('Please sign in to manage your reservations.')","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f"}]}